apiVersion: v1
kind: Namespace
metadata:
  name: kargo-demo-09

---
apiVersion: kargo.akuity.io/v1alpha1
kind: Project
metadata:
  name: kargo-demo-09
spec:
  promotionPolicies:
    - stage: test
      autoPromotionEnabled: true
    - stage: uat
      autoPromotionEnabled: true
---
# apiVersion: v1
# kind: Secret
# type: Opaque
# metadata:
#   name: manifests
#   namespace: kargo-demo-09
#   labels:
#     kargo.akuity.io/cred-type: git
# stringData:
#   repoURL: https://github.com/cyberslot/kargo-demo-gitops.git
#   username: cyberslot
#   password: <github-pat>

#######################################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kargo-vault-sa
  namespace: kargo-demo-09

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: kargo-demo-09
spec:
  provider:
    vault:
      server: "http://vault.vault.svc.cluster.local:8200" # adjust to your Vault address
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "kargo-demo-role"
          serviceAccountRef:
            name: "kargo-vault-sa"

---
# Replace the existing Secret with this
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: manifests-external-secret
  namespace: kargo-demo-09
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: manifests
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          kargo.akuity.io/cred-type: git
      data:
        repoURL: "https://github.com/cyberslot/kargo-demo-gitops.git"
        username: "cyberslot"
        password: "{{ .PAT | toString }}"
  data:
    - secretKey: PAT
      remoteRef:
        key: PAT
        property: value

#######################################################################
---
apiVersion: kargo.akuity.io/v1alpha1
kind: PromotionTask
metadata:
  name: base-promo-process
  namespace: kargo-demo-09
spec:
  vars:
    - name: gitRepo
    - name: targetBranch
    - name: outPath
  steps:
    - uses: git-clone
      config:
        repoURL: ${{ vars.gitRepo }}
        checkout:
          - commit: ${{ commitFrom(vars.gitRepo).ID }}
            path: ./src
          - branch: ${{ vars.targetBranch }}
            create: true
            path: ${{ vars.outPath }}
    - uses: git-clear
      config:
        path: ${{ vars.outPath }}
    - uses: copy
      config:
        inPath: ./src/base
        outPath: ${{ vars.outPath }}/base
    - uses: copy
      config:
        inPath: ./src/stages/${{ ctx.stage }}
        outPath: ${{ vars.outPath }}/stages/${{ ctx.stage }}
    - uses: git-commit
      as: commit
      config:
        path: ${{ vars.outPath }}
        message: updated manifests copied from main
    - uses: compose-output
      config:
        commit: ${{ task.outputs.commit.commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Warehouse
metadata:
  name: kargo-demo
  namespace: kargo-demo-09
spec:
  subscriptions:
    - git:
        repoURL: https://github.com/cyberslot/kargo-demo-gitops.git
        # Watch this branch instead of main. This is the "trunk" for this example.
        branch: kustomize
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: test
  namespace: kargo-demo-09
spec:
  requestedFreight:
    - origin:
        kind: Warehouse
        name: kargo-demo
      sources:
        direct: true
  promotionTemplate:
    spec:
      vars:
        - name: gitRepo
          value: https://github.com/cyberslot/kargo-demo-gitops.git
        - name: targetBranch
          value: 09/stage/${{ ctx.stage }}
        - name: outPath
          value: ./out
      steps:
        - task:
            name: base-promo-process
          as: base
        - uses: git-push
          config:
            path: ${{ vars.outPath }}
        - uses: argocd-update
          config:
            apps:
              - name: ${{ ctx.project }}-${{ ctx.stage }}
                sources:
                  - repoURL: ${{ vars.gitRepo }}
                    desiredRevision: ${{ outputs.base.commit }}
  verification:
    analysisTemplates:
      - name: kargo-demo
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: uat
  namespace: kargo-demo-09
spec:
  requestedFreight:
    - origin:
        kind: Warehouse
        name: kargo-demo
      sources:
        stages:
          - test
  promotionTemplate:
    spec:
      vars:
        - name: gitRepo
          value: https://github.com/cyberslot/kargo-demo-gitops.git
        - name: targetBranch
          value: 09/stage/${{ ctx.stage }}
        - name: outPath
          value: ./out
      steps:
        - task:
            name: base-promo-process
          as: base
        - uses: git-push
          config:
            path: ${{ vars.outPath }}
        - uses: argocd-update
          config:
            apps:
              - name: ${{ ctx.project }}-${{ ctx.stage }}
                sources:
                  - repoURL: ${{ vars.gitRepo }}
                    desiredRevision: ${{ outputs.base.commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod
  namespace: kargo-demo-09
spec:
  requestedFreight:
    - origin:
        kind: Warehouse
        name: kargo-demo
      sources:
        stages:
          - uat
  promotionTemplate:
    spec:
      vars:
        - name: gitRepo
          value: https://github.com/cyberslot/kargo-demo-gitops.git
        - name: targetBranch
          value: 09/stage/${{ ctx.stage }}
        - name: outPath
          value: ./out
      steps:
        - task:
            name: base-promo-process
        - uses: git-push
          as: push
          config:
            path: ${{ vars.outPath }}
            generateTargetBranch: true
        - uses: git-open-pr
          as: open-pr
          config:
            repoURL: ${{ vars.gitRepo }}
            createTargetBranch: true
            sourceBranch: ${{ outputs.push.branch }}
            targetBranch: ${{ vars.targetBranch }}
        - uses: git-wait-for-pr
          as: wait-for-pr
          config:
            repoURL: ${{ vars.gitRepo }}
            prNumber: ${{ outputs['open-pr'].prNumber }}
        - uses: argocd-update
          config:
            apps:
              - name: ${{ ctx.project }}-${{ ctx.stage }}
                sources:
                  - repoURL: ${{ vars.gitRepo }}
                    desiredRevision: ${{ outputs['wait-for-pr'].commit }}
  verification:
    analysisTemplates:
      - name: kargo-demo
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: kargo-demo
  namespace: kargo-demo-09
spec:
  metrics:
    - name: test
      provider:
        job:
          metadata:
          spec:
            backoffLimit: 1
            template:
              spec:
                containers:
                  - name: test
                    image: alpine:latest
                    command:
                      - sleep
                      - "20"
                restartPolicy: Never
